AWSTemplateFormatVersion: '2010-09-09'
Description: Creando el entorno para ECS

Resources:
    VPC:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: 10.0.0.0/16
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: VPC
    SubredPublica:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.1.0/24
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: SubredPublica
    SubredPrivada:
        Type: 'AWS::EC2::Subnet'
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.2.0/24
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: SubredPrivada

    InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        Properties: {}
    RouteTable:
        Type: 'AWS::EC2::RouteTable'
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: RouteTable
    PublicRoute:
        Type: 'AWS::EC2::Route'
        Properties:
            RouteTableId: !Ref RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
        DependsOn: InternetGateway
    SubnetRouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
            SubnetId: !Ref SubredPublica
            RouteTableId: !Ref RouteTable
    VPCGatewayAttachment:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    GrupoDeSeguridad:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: Acceso al cluster ECS
            VpcId: !Ref VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 3000
                  ToPort: 3000
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: -1
                  CidrIp: 0.0.0.0/0

    RolDeEjecucion:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Principal:
                        Service: ecs-tasks.amazonaws.com
                      Action: 'sts:AssumeRole'
            Path: /
            Policies:
            - PolicyName: ECSDeploy
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Action:
                        - ecr:GetAuthorizationToken
                        - ecr:BatchCheckLayerAvailability
                        - ecr:GetDownloadUrlForLayer
                        - ecr:BatchGetImage
                        - logs:CreateLogStream
                        - logs:PutLogEvents
                      Resource: '*'
    
    RepositorioECR:
        Type: 'AWS::ECR::Repository'
        Properties:
            RepositoryName: !Sub "${AWS::StackName}-application"

    ClusterECS:
        Type: 'AWS::ECS::Cluster'

    Tarea:
        Type: 'AWS::ECS::TaskDefinition'
        Properties:
            Family: !Sub "${AWS::StackName}-application"
            Cpu: 1024
            Memory: 2048
            NetworkMode: awsvpc
            RequiresCompatibilities:
              - FARGATE
            ExecutionRoleArn: !GetAtt RolDeEjecucion.Arn
            ContainerDefinitions:
              - Name: !Sub "${AWS::StackName}-container"
                Image: !GetAtt RepositorioECR.RepositoryUri
                Essential: true
                PortMappings:
                  - ContainerPort: 3000

    Servicio:
        Type: 'AWS::ECS::Service'
        Properties:
            ServiceName: !Sub "${AWS::StackName}-service"
            Cluster: !Ref ClusterECS
            TaskDefinition: !Ref Tarea
            DesiredCount: 1
            LaunchType: FARGATE
            NetworkConfiguration:
                AwsvpcConfiguration:
                    Subnets:
                      - !Ref SubredPublica
                    SecurityGroups:
                      - !Ref GrupoDeSeguridad
                    AssignPublicIp: "ENABLED"
